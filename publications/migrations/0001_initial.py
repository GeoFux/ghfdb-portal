# Generated by Django 3.0.8 on 2020-08-25 06:21

from django.db import migrations, models
import django.db.models.expressions
import django_extensions.db.fields
import meta.models
import publications.models
import simple_history.models
import sortedm2m.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(max_length=100)),
                ('first_name', models.CharField(blank=True, max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='last_name')),
            ],
            options={
                'db_table': 'authors',
                'ordering': ['last_name', 'first_name', 'middle_name'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalPublication',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('bib_id', models.CharField(blank=True, db_index=True, max_length=100)),
                ('type', models.CharField(blank=True, max_length=100)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('doi', models.CharField(blank=True, max_length=200)),
                ('bibtex', models.TextField(blank=True)),
                ('abstract', models.TextField(blank=True)),
                ('journal', models.CharField(blank=True, max_length=250)),
                ('source', models.CharField(blank=True, default='User Upload', max_length=100)),
                ('is_featured', models.BooleanField(default=False)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from=['bib_id', 'title'])),
                ('is_verified', models.BooleanField(default=False)),
                ('date_verified', models.DateTimeField(blank=True, null=True)),
                ('uploaded_by', models.CharField(blank=True, max_length=150, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical publication',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Operator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='operator')),
            ],
        ),
        migrations.CreateModel(
            name='Upload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('data_type', models.IntegerField(choices=[(0, 'Heat Flow'), (1, 'Thermal Gradient'), (2, 'Temperature'), (3, 'Thermal Conductivity'), (4, 'Heat Generation')], default=0)),
                ('data', models.FileField(upload_to=publications.models.file_storage_path)),
                ('bibtex', models.TextField(blank=True, null=True)),
                ('date_uploaded', models.DateTimeField(auto_now_add=True)),
                ('imported', models.BooleanField(default=False)),
                ('date_imported', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Upload',
                'ordering': ['-date_uploaded'],
            },
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('bib_id', models.CharField(blank=True, max_length=100, unique=True)),
                ('type', models.CharField(blank=True, max_length=100)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('doi', models.CharField(blank=True, max_length=200)),
                ('bibtex', models.TextField(blank=True)),
                ('abstract', models.TextField(blank=True)),
                ('journal', models.CharField(blank=True, max_length=250)),
                ('source', models.CharField(blank=True, default='User Upload', max_length=100)),
                ('is_featured', models.BooleanField(default=False)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from=['bib_id', 'title'])),
                ('is_verified', models.BooleanField(default=False)),
                ('date_verified', models.DateTimeField(blank=True, null=True)),
                ('uploaded_by', models.CharField(blank=True, max_length=150, null=True)),
                ('authors', sortedm2m.fields.SortedManyToManyField(blank=True, help_text=None, related_name='publications', to='publications.Author')),
            ],
            options={
                'db_table': 'publications',
                'ordering': [django.db.models.expressions.OrderBy(django.db.models.expressions.F('year'), descending=True, nulls_last=True)],
            },
            bases=(models.Model, meta.models.ModelMeta),
        ),
    ]
