version: '3'
name: ghfdb
volumes:
  postgres: {}
  postgres_backups: {}
  media: {}
services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django
    image: production_django
    depends_on:
      - postgres
      - redis
      - minio
    command: start-django
    env_file:
      - stack.env
    labels:
      - traefik.enable=true
      - traefik.http.routers.django.tls=true
      - traefik.http.routers.django.rule=Host(`${DJANGO_HOST_NAME}`)
      - traefik.http.routers.django.entrypoints=websecure
      - traefik.http.services.django.loadbalancer.server.port=5000
      - traefik.http.middlewares.csrf.headers.hostsProxyHeaders=X-CSRFToken
  postgres:
    image: geoluminate/postgis:latest
    env_file:
      - stack.env
    volumes:
      - postgres:/var/lib/postgresql/data
      - postgres_backups:/backups
  redis:
    image: redis:6
  celeryworker:
    <<: *django
    command: start-celeryworker
    labels: []
  celerybeat:
    <<: *django
    command: start-celerybeat
    labels: []
  flower:
    <<: *django
    command: start-flower
    labels:
      - traefik.enable=true
      - traefik.http.routers.flower.tls=true
      - traefik.http.routers.flower.rule=Host(`taskmanager.${DJANGO_HOST_NAME}`)
      - traefik.http.routers.flower.entrypoints=websecure
      - traefik.http.services.flower.loadbalancer.server.url=http://flower:5555
  minio:
    image: quay.io/minio/minio:latest
    volumes:
      - media:/minio
    env_file:
      - stack.env
    command: server /minio
    labels:
      - traefik.enable=true
      - traefik.http.routers.media.tls=true
      - traefik.http.routers.media.entrypoints=websecure
      - traefik.http.routers.media.rule=Host(`media.${DJANGO_HOST_NAME}`)
      - traefik.http.routers.media.service=media
      - traefik.http.services.media.loadbalancer.server.url=http://minio:9000
      - traefik.http.routers.minio.tls=true
      - traefik.http.routers.minio.entrypoints=websecure
      - traefik.http.routers.minio.rule=Host(`media.${DJANGO_HOST_NAME}`) && PathPrefix(`/dashboard`)
      - traefik.http.routers.minio.service=minio
      - traefik.http.services.minio.loadbalancer.server.url=http://minio:9001
  traefik:
    image: "traefik:latest"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.websecure.address=:443"
      - --certificatesresolvers.letsencrypt.acme.httpchallenge=true
      - --certificatesresolvers.letsencrypt.acme.email=${SSL_CERTIFICATE_EMAIL} #Set your email address here, is for the generation of SSL certificates with Let's Encrypt.
      - --certificatesresolvers.letsencrypt.acme.storage=/etc/traefik/acme/acme.json
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DJANGO_HOST_NAME}`)"  # Change to your domain
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.middlewares.traefik-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.traefik-secure.rule=Host(`traefik.${DJANGO_HOST_NAME}`)"  # Change to your domain
      - "traefik.http.routers.traefik-secure.entrypoints=websecure"
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
