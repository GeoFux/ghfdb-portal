# Generated by Django 4.2.5 on 2023-10-04 14:23

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_bleach.models
import meta.models
import quantityfield.fields
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="HeatFlow",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Universally unique identifier for this record.",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When this record was created.",
                        verbose_name="Created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When this record was last modified.",
                        verbose_name="Modified",
                    ),
                ),
                (
                    "q",
                    quantityfield.fields.QuantityField(
                        base_units="mW / m^2",
                        help_text="Heat-flow density for the location after all corrections for instrumental and environmental effects.",
                        unit_choices=["mW / m^2"],
                        validators=[
                            django.core.validators.MinValueValidator(-1000000),
                            django.core.validators.MaxValueValidator(1000000),
                        ],
                        verbose_name="heat flow",
                    ),
                ),
                (
                    "q_uncertainty",
                    quantityfield.fields.QuantityField(
                        base_units="mW / m^2",
                        blank=True,
                        help_text="Uncertainty (one standard deviation) of the heat-flow value [q] estimated by an error propagation from uncertainty in thermal conductivity and temperature gradient, standard deviation from the average of the heat flow intervals or deviation from the linear regression of the Bullard plot.",
                        null=True,
                        unit_choices=["mW / m^2"],
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(1000000),
                        ],
                        verbose_name="heat flow uncertainty",
                    ),
                ),
                (
                    "environment",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Onshore (continental)", "Onshore (continental)"),
                            (
                                "Onshore (lake, river, etc.)",
                                "Onshore (lake, river, etc.)",
                            ),
                            ("Offshore (continental)", "Offshore (continental)"),
                            ("Offshore (marine)", "Offshore (marine)"),
                            ("unspecified", "Unspecified"),
                        ],
                        help_text="Describes the general geographical setting of the heat-flow site (not the applied methodology).",
                        max_length=255,
                        null=True,
                        verbose_name="basic geographical environment",
                    ),
                ),
                (
                    "corr_HP_flag",
                    models.BooleanField(
                        blank=True,
                        default=None,
                        help_text="Specifies if corrections to the calculated heat flow considers the contribution of the heat production of the overburden to the terrestrial surface heat flow q.",
                        null=True,
                        verbose_name="HP correction flag",
                    ),
                ),
                (
                    "total_depth_MD",
                    quantityfield.fields.QuantityField(
                        base_units="m",
                        blank=True,
                        help_text="Total measured depth (MD) of the borehole.",
                        null=True,
                        unit_choices=["m"],
                        validators=[
                            django.core.validators.MinValueValidator(-12000),
                            django.core.validators.MaxValueValidator(9000),
                        ],
                        verbose_name="total mesaured depth",
                    ),
                ),
                (
                    "total_depth_TVD",
                    quantityfield.fields.QuantityField(
                        base_units="m",
                        blank=True,
                        help_text="Specification of the total true vertical depth below mean sea level.",
                        null=True,
                        unit_choices=["m"],
                        validators=[
                            django.core.validators.MinValueValidator(-12000),
                            django.core.validators.MaxValueValidator(9000),
                        ],
                        verbose_name="total true vertical depth",
                    ),
                ),
                (
                    "explo_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Drilling", "Drilling"),
                            ("Mining", "Mining"),
                            ("Tunneling", "Tunneling"),
                            (
                                "Probing (onshore/lake, river, etc.)",
                                "Probing (onshore/lake, river, etc.)",
                            ),
                            ("Probing (offshore/ocean)", "Probing (offshore/ocean)"),
                            (
                                "Other (specify in comments)",
                                "Other (specify in comments)",
                            ),
                            ("unspecified", "Unspecified"),
                        ],
                        help_text="Specification of the general means by which the rock was accessed by temperature sensors for the respective data entry.",
                        max_length=255,
                        null=True,
                        verbose_name="exploration method",
                    ),
                ),
                (
                    "explo_purpose",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Hydrocarbon", "Hydrocarbon"),
                            ("Underground storage", "Underground storage"),
                            ("Geothermal", "Geothermal"),
                            ("Groundwater", "Groundwater"),
                            ("Mapping", "Mapping"),
                            ("Mining", "Mining"),
                            ("Research", "Research"),
                            ("Tunneling", "Tunneling"),
                            (
                                "Other (specify in comments)",
                                "Other (specify in comments)",
                            ),
                            ("unspecified", "Unspecified"),
                        ],
                        help_text="Main purpose of the reconnaissance target providing access for the temperature sensors.",
                        max_length=255,
                        null=True,
                        verbose_name="exploration purpose",
                    ),
                ),
            ],
            options={
                "verbose_name": "Heat Flow",
                "verbose_name_plural": "Heat Flow (Parent)",
            },
            bases=(meta.models.ModelMeta, models.Model),
        ),
        migrations.CreateModel(
            name="HeatFlowChild",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Universally unique identifier for this record.",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When this record was created.",
                        verbose_name="Created",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When this record was last modified.",
                        verbose_name="Modified",
                    ),
                ),
                (
                    "qc",
                    quantityfield.fields.QuantityField(
                        base_units="mW / m^2",
                        help_text="Any kind of heat-flow value.",
                        unit_choices=["mW / m^2"],
                        validators=[
                            django.core.validators.MinValueValidator(-1000000),
                            django.core.validators.MaxValueValidator(1000000),
                        ],
                        verbose_name="heat flow (child)",
                    ),
                ),
                (
                    "qc_uncertainty",
                    quantityfield.fields.QuantityField(
                        base_units="mW / m^2",
                        blank=True,
                        help_text="Uncertainty (one standard deviation) of the heat-flow value [qc] estimated by an error propagation from uncertainty in thermal conductivity and temperature gradient or deviation from the linear regression of the Bullard plot (corrected preferred over measured gradient).",
                        null=True,
                        unit_choices=["mW / m^2"],
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(1000000),
                        ],
                        verbose_name="heat flow uncertainty",
                    ),
                ),
                (
                    "q_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("FOU", "Fourier's Law"),
                            ("PRO", "Product or Interval"),
                            ("BUL", "Bullard"),
                            ("BOO", "Boot-strapping"),
                            ("OTH", "Other"),
                        ],
                        help_text="Principal method of heat-flow calculation from temperature and thermal conductivity data.",
                        max_length=255,
                        null=True,
                        verbose_name="method",
                    ),
                ),
                (
                    "q_top",
                    quantityfield.fields.QuantityField(
                        base_units="m",
                        blank=True,
                        help_text="Describes the true vertical depth (TVD) of the top end of the heat-flow determination interval relative to the land surface/seafloor.",
                        null=True,
                        unit_choices=["m"],
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(20000),
                        ],
                        verbose_name="interval top",
                    ),
                ),
                (
                    "q_bottom",
                    quantityfield.fields.QuantityField(
                        base_units="m",
                        blank=True,
                        help_text="Describes the true vertical depth (TVD) of the bottom end of the heat-flow determination interval relative to the land surface.",
                        null=True,
                        unit_choices=["m"],
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(20000),
                        ],
                        verbose_name="interval bottom",
                    ),
                ),
                (
                    "expedition",
                    models.CharField(
                        help_text="Specification of the expedition, cruise, platform or research vessel where the marine heat flow survey was conducted.",
                        max_length=255,
                        null=True,
                        verbose_name="expedition/platform/ship",
                    ),
                ),
                (
                    "relevant_child",
                    models.BooleanField(
                        blank=True,
                        default=None,
                        help_text="Specify whether the child entry is used for computation of representative location heat flow values at the parent level or not.",
                        null=True,
                        verbose_name="Relevant child",
                    ),
                ),
                (
                    "probe_penetration",
                    quantityfield.fields.QuantityField(
                        base_units="m",
                        blank=True,
                        help_text="Penetration depth of marine probe into the sediment.",
                        null=True,
                        unit_choices=["m"],
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(1000),
                        ],
                        verbose_name="penetration depth",
                    ),
                ),
                (
                    "probe_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("COR", "Corer-outrigger"),
                            ("BUL", "Bullard"),
                            ("VIO", "Lister Violin-Bow"),
                            ("EWI", "Ewing"),
                            ("OTH", "Other"),
                            ("UNS", "Unspecified"),
                        ],
                        help_text="Type of heat-flow probe used for measurement.",
                        max_length=255,
                        null=True,
                        verbose_name="probe type",
                    ),
                ),
                (
                    "probe_length",
                    quantityfield.fields.QuantityField(
                        base_units="m",
                        blank=True,
                        help_text="Length of marine heat-flow probe.",
                        null=True,
                        unit_choices=["m"],
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="probe length",
                    ),
                ),
                (
                    "probe_tilt",
                    quantityfield.fields.QuantityField(
                        base_units="degree",
                        blank=True,
                        help_text="Tilt of the marine heat-flow probe.",
                        null=True,
                        unit_choices=["degree"],
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(90),
                        ],
                        verbose_name="probe tilt",
                    ),
                ),
                (
                    "water_temperature",
                    quantityfield.fields.QuantityField(
                        base_units="°C",
                        blank=True,
                        help_text="Seafloor temperature where surface heat-flow value (q) is taken. e.g. PT 100 or Mudline temperature for ocean drilling data.",
                        null=True,
                        unit_choices=["°C", "K"],
                        validators=[
                            django.core.validators.MinValueValidator(-10),
                            django.core.validators.MaxValueValidator(1000),
                        ],
                        verbose_name="bottom water temperature",
                    ),
                ),
                (
                    "T_grad_mean",
                    quantityfield.fields.QuantityField(
                        base_units="K/km",
                        blank=True,
                        help_text="Mean temperature gradient measured for the heat-flow determination interval.",
                        null=True,
                        unit_choices=["K/km"],
                        validators=[
                            django.core.validators.MinValueValidator(-100000),
                            django.core.validators.MaxValueValidator(100000),
                        ],
                        verbose_name="Calculated or inferred temperature gradient\xa0",
                    ),
                ),
                (
                    "T_grad_uncertainty",
                    quantityfield.fields.QuantityField(
                        base_units="K/km",
                        blank=True,
                        help_text="Uncertainty (one standard deviation) of mean measured temperature gradient [T_grad_mean] as estimated by an error propagation from the uncertainty in the top and bottom temperature determinations or deviation from the linear regression of the temperature-depth data.",
                        null=True,
                        unit_choices=["K/km"],
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100000),
                        ],
                        verbose_name="Temperature gradient uncertainty",
                    ),
                ),
                (
                    "T_grad_mean_cor",
                    quantityfield.fields.QuantityField(
                        base_units="K/km",
                        blank=True,
                        help_text="Mean temperature gradient corrected for borehole (drilling/mud circulation) and environmental effects (terrain effects/topography, sedimentation, erosion, magmatic intrusions, paleoclimate, etc.). Name the correction method in the corresponding item.",
                        null=True,
                        unit_choices=["K/km"],
                        validators=[
                            django.core.validators.MinValueValidator(-100000),
                            django.core.validators.MaxValueValidator(100000),
                        ],
                        verbose_name="Mean temperature gradient corrected",
                    ),
                ),
                (
                    "T_grad_uncertainty_cor",
                    quantityfield.fields.QuantityField(
                        base_units="K/km",
                        blank=True,
                        help_text="Uncertainty (one standard deviation) of  mean corrected temperature gradient [T_grad_mean_cor] as estimated by an error propagation from the uncertainty in the top and bottom temperature determinations or deviation from the linear regression of the temperature depth data.",
                        null=True,
                        unit_choices=["K/km"],
                        validators=[
                            django.core.validators.MinValueValidator(-100000),
                            django.core.validators.MaxValueValidator(100000),
                        ],
                        verbose_name="Corrected temperature gradient uncertainty",
                    ),
                ),
                (
                    "T_method_top",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("LOGeq", "LOGeq: borehole in equilibrium"),
                            ("LOGpert", "LOGpert: borehole perturbed"),
                            ("cLOG", "cLOG: perturbed but corrected"),
                            ("DTSeq", "DTSeq: in equilibrium"),
                            ("DTSpert", "DTSpert: perturbed"),
                            ("cDTS", "cDTS: perturbed but corrected"),
                            ("BHT", "BHT: uncorrected"),
                            ("cBHT", "cBHT: corrected"),
                            ("DST", "DST: uncorrected"),
                            ("cDST", "cDST: corrected for effects"),
                            ("RTDeq", "RTDeq: in equilibrium"),
                            ("RTDpert", "RTDpert: perturbed"),
                            ("cRTD", "cRTD: perturbed but corrected"),
                            ("ODTT-PC", "ODTT-PC: piston corer"),
                            ("ODTT-TP", "ODTT-TP: thermistor probe"),
                            ("CPD", "CPD: Curie Point/Depth estimates"),
                            ("XEN", "XEN: Xenolith"),
                            ("GTM", "GTM: Geothermometry"),
                            ("BSR", "BSR: bottom-simulating seismic reflector"),
                            (
                                "SUR",
                                "SUR: surface temperature/bottom water temperature",
                            ),
                            ("OTH", "Other (method must be specified in comments)"),
                        ],
                        help_text="Method used for temperature determination at the top of the heat-flow determination interval.",
                        max_length=255,
                        null=True,
                        verbose_name="Temperature method (top)",
                    ),
                ),
                (
                    "T_method_bottom",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("LOGeq", "LOGeq: borehole in equilibrium"),
                            ("LOGpert", "LOGpert: borehole perturbed"),
                            ("cLOG", "cLOG: perturbed but corrected"),
                            ("DTSeq", "DTSeq: in equilibrium"),
                            ("DTSpert", "DTSpert: perturbed"),
                            ("cDTS", "cDTS: perturbed but corrected"),
                            ("BHT", "BHT: uncorrected"),
                            ("cBHT", "cBHT: corrected"),
                            ("DST", "DST: uncorrected"),
                            ("cDST", "cDST: corrected for effects"),
                            ("RTDeq", "RTDeq: in equilibrium"),
                            ("RTDpert", "RTDpert: perturbed"),
                            ("cRTD", "cRTD: perturbed but corrected"),
                            ("ODTT-PC", "ODTT-PC: piston corer"),
                            ("ODTT-TP", "ODTT-TP: thermistor probe"),
                            ("CPD", "CPD: Curie Point/Depth estimates"),
                            ("XEN", "XEN: Xenolith"),
                            ("GTM", "GTM: Geothermometry"),
                            ("BSR", "BSR: bottom-simulating seismic reflector"),
                            (
                                "SUR",
                                "SUR: surface temperature/bottom water temperature",
                            ),
                            ("OTH", "Other (method must be specified in comments)"),
                        ],
                        help_text="Method used for temperature determination at the bottom of the heat-flow determination interval.",
                        max_length=255,
                        null=True,
                        verbose_name="Temperature method (bottom)",
                    ),
                ),
                (
                    "T_shutin_top",
                    quantityfield.fields.PositiveIntegerQuantityField(
                        base_units="hour",
                        blank=True,
                        help_text="Time of measurement at the interval top in relation to the end values measured during the drilling are equal to zero.",
                        null=True,
                        unit_choices=["hour"],
                        validators=[django.core.validators.MaxValueValidator(10000)],
                        verbose_name="Shut-in time (top)",
                    ),
                ),
                (
                    "T_shutin_bottom",
                    quantityfield.fields.PositiveIntegerQuantityField(
                        base_units="hour",
                        blank=True,
                        help_text="Time of measurement at the interval bottom in relation to the end values measured during the drilling are equal to zero.",
                        null=True,
                        unit_choices=["hour"],
                        validators=[django.core.validators.MaxValueValidator(10000)],
                        verbose_name="Shut-in time (bottom)",
                    ),
                ),
                (
                    "T_correction_top",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Horner plot", "Horner plot"),
                            ("Cylinder source method", "Cylinder source method"),
                            (
                                "Line source explosion method",
                                "Line source explosion method",
                            ),
                            (
                                "Inverse numerical modelling",
                                "Inverse numerical modelling",
                            ),
                            (
                                "Other published correction",
                                "Other published correction",
                            ),
                            ("unspecified", "Unspecified"),
                            ("not corrected", "Not corrected"),
                        ],
                        help_text="Approach applied to correct the temperature measurement for drilling perturbations at the top of the interval used for heat-flow determination.",
                        max_length=255,
                        null=True,
                        verbose_name="Temperature correction method (top)",
                    ),
                ),
                (
                    "T_correction_bottom",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Horner plot", "Horner plot"),
                            ("Cylinder source method", "Cylinder source method"),
                            (
                                "Line source explosion method",
                                "Line source explosion method",
                            ),
                            (
                                "Inverse numerical modelling",
                                "Inverse numerical modelling",
                            ),
                            (
                                "Other published correction",
                                "Other published correction",
                            ),
                            ("unspecified", "Unspecified"),
                            ("not corrected", "Not corrected"),
                        ],
                        help_text="Approach applied to correct the temperature measurement for drilling perturbations at the bottom of the interval used for heat-flow determination.",
                        max_length=255,
                        null=True,
                        verbose_name="Temperature correction method (bottom)",
                    ),
                ),
                (
                    "T_number",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        help_text="Number of discrete temperature points (e.g. number of used BHT values, log values or thermistors used in probe sensing) confirming the mean temperature gradient [T_grad_mean_meas]. NOT the repetition of one measurement at a certain depth.\xa0",
                        null=True,
                        verbose_name="Number of temperature recordings",
                    ),
                ),
                (
                    "tc_mean",
                    quantityfield.fields.QuantityField(
                        base_units="W/mK",
                        blank=True,
                        help_text="Mean conductivity in vertical direction representative for the interval of heat-flow determination. In best case, the value reflects the true in-situ conditions for the corresponding heat-flow interval.",
                        null=True,
                        unit_choices=["W/mK"],
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Mean thermal conductivity",
                    ),
                ),
                (
                    "tc_uncertainty",
                    quantityfield.fields.QuantityField(
                        base_units="W/mK",
                        blank=True,
                        help_text="Uncertainty (one standard deviation) of mean thermal conductivity.",
                        null=True,
                        unit_choices=["W/mK"],
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Thermal conductivity uncertainty",
                    ),
                ),
                (
                    "tc_source",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("In-situ probe", "In-situ probe"),
                            ("Core-log integration", "Core-log integration"),
                            ("Core samples", "Core samples"),
                            ("Cutting samples", "Cutting samples"),
                            ("Outcrop samples", "Outcrop samples"),
                            ("Well-log interpretation", "Well-log interpretation"),
                            ("Mineral computation", "Mineral computation"),
                            ("Assumed from literature", "Assumed from literature"),
                            ("Other (specify)", "Other (specify)"),
                            ("unspecified", "Unspecified"),
                        ],
                        help_text="Nature of the samples from which the mean thermal conductivity was determined.",
                        max_length=255,
                        null=True,
                        verbose_name="Thermal conductivity source",
                    ),
                ),
                (
                    "tc_location",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Actual heat-flow location", "Actual heat-flow location"),
                            ("Other location", "Other location"),
                            ("Literature/unspecified", "Literature/unspecified"),
                        ],
                        help_text="Location of conductivity data used for heat-flow calculation.",
                        max_length=255,
                        null=True,
                        verbose_name="Thermal conductivity location",
                    ),
                ),
                (
                    "tc_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Lab - point source", "Lab - point source"),
                            (
                                "Lab - line source / full space",
                                "Lab - line source / full space",
                            ),
                            (
                                "Lab - line source / half space",
                                "Lab - line source / half space",
                            ),
                            (
                                "Lab - plane source / full space",
                                "Lab - plane source / full space",
                            ),
                            (
                                "Lab - plane source / half space",
                                "Lab - plane source / half space",
                            ),
                            ("Lab - other", "Lab - other"),
                            ("Probe - pulse technique", "Probe - pulse technique"),
                            (
                                "Well-log - deterministic approach",
                                "Well-log - deterministic approach",
                            ),
                            (
                                "Well-log - empirical equation",
                                "Well-log - empirical equation",
                            ),
                            (
                                "Estimation - from chlorine content",
                                "Estimation - from chlorine content",
                            ),
                            (
                                "Estimation - from water content/porosity",
                                "Estimation - from water content/porosity",
                            ),
                            (
                                "Estimation - from lithology and literature",
                                "Estimation - from lithology and literature",
                            ),
                            (
                                "Estimation - from mineral composition",
                                "Estimation - from mineral composition",
                            ),
                            ("unspecified", "Unspecified"),
                        ],
                        help_text="Method used to determine mean thermal conductivity.",
                        max_length=255,
                        null=True,
                        verbose_name="Thermal conductivity method",
                    ),
                ),
                (
                    "tc_saturation",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Saturated measured in-situ",
                                "Saturated measured in-situ",
                            ),
                            ("Recovered", "Recovered"),
                            ("Saturated measured", "Saturated measured"),
                            ("Saturated calculated", "Saturated calculated"),
                            ("Dry measured", "Dry measured"),
                            (
                                "Other (specify)",
                                "Other (must be specified in comments)",
                            ),
                            ("Unspecified", "Unspecified"),
                        ],
                        help_text="Saturation state of the studied rock interval studied for thermal conductivity.",
                        max_length=255,
                        null=True,
                        verbose_name="Thermal conductivity saturation",
                    ),
                ),
                (
                    "tc_pT_conditions",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Unrecorded ambient pT conditions",
                                "Unrecorded ambient pT conditions",
                            ),
                            (
                                "Recorded ambient pT conditions",
                                "Recorded ambient pT conditions",
                            ),
                            (
                                "Actual in-situ (pT) conditions",
                                "Actual in-situ (pT) conditions",
                            ),
                            ("Replicated in-situ (p)", "Replicated in-situ (p)"),
                            ("Replicated in-situ (T)", "Replicated in-situ (T)"),
                            ("Replicated in-situ (pT)", "Replicated in-situ (pT)"),
                            ("Corrected in-situ (p)", "Corrected in-situ (p)"),
                            ("Corrected in-situ (T)", "Corrected in-situ (T)"),
                            ("Corrected in-situ (pT)", "Corrected in-situ (pT)"),
                            ("unspecified", "Unspecified"),
                        ],
                        help_text="Qualified conditions of pressure and temperature under which the mean thermal conductivity used for the heat-flow computation was determined.",
                        max_length=255,
                        null=True,
                        verbose_name="Thermal conductivity pT conditions",
                    ),
                ),
                (
                    "tc_pT_function",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("T - Tikhomirov (1968)", "T - Tikhomirov (1968)"),
                            (
                                "T - Kutas & Gordienko (1971)",
                                "T - Kutas & Gordienko (1971)",
                            ),
                            ("T - Anand et al. (1973)", "T - Anand et al. (1973)"),
                            ("T - Haenel & Zoth (1973)", "T - Haenel & Zoth (1973)"),
                            ("T - Blesch et al. (1983)", "T - Blesch et al. (1983)"),
                            ("T - Sekiguchi (1984)", "T - Sekiguchi (1984)"),
                            ("T - Chapman et al. (1984)", "T - Chapman et al. (1984)"),
                            ("T - Zoth & Haenel (1988)", "T - Zoth & Haenel (1988)"),
                            ("T - Somerton (1992)", "T - Somerton (1992)"),
                            ("T - Sass et al. (1992)", "T - Sass et al. (1992)"),
                            ("T - Funnell et al. (1996)", "T - Funnell et al. (1996)"),
                            (
                                "T - Kukkonen et al. (1999)",
                                "T - Kukkonen et al. (1999)",
                            ),
                            ("T - Seipold (2001)", "T - Seipold (2001)"),
                            (
                                "T - Vosteen & Schellschmidt (2003)",
                                "T - Vosteen & Schellschmidt (2003)",
                            ),
                            ("T - Sun et al. (2017)", "T - Sun et al. (2017)"),
                            ("T - Miranda et al. (2018)", "T - Miranda et al. (2018)"),
                            ("T - Ratcliff (1960)", "T - Ratcliff (1960)"),
                            ("p - Bridgman (1924)", "p - Bridgman (1924)"),
                            ("p - Sibbitt (1975)", "p - Sibbitt (1975)"),
                            (
                                "p - Kukkonen et al. (1999)",
                                "p - Kukkonen et al. (1999)",
                            ),
                            ("p - Seipold (2001)", "p - Seipold (2001)"),
                            (
                                "p - Durutürk et al. (2002)",
                                "p - Durutürk et al. (2002)",
                            ),
                            ("p - Demirci et al. (2004)", "p - Demirci et al. (2004)"),
                            ("p - Görgülü et al. (2008)", "p - Görgülü et al. (2008)"),
                            (
                                "p - Fuchs & Förster (2014)",
                                "p - Fuchs & Förster (2014)",
                            ),
                            ("pT - Radcliff (1960)", "pT - Radcliff (1960)"),
                            ("pT - Buntebarth (1991)", "pT - Buntebarth (1991)"),
                            (
                                "pT - Chapman & Furlong (1992)",
                                "pT - Chapman & Furlong (1992)",
                            ),
                            ("pT - Emirov et al. (1997)", "pT - Emirov et al. (1997)"),
                            (
                                "pT - Abdulagatov et al. (2006)",
                                "pT - Abdulagatov et al. (2006)",
                            ),
                            (
                                "pT - Emirov & Ramazanova (2007)",
                                "pT - Emirov & Ramazanova (2007)",
                            ),
                            (
                                "pT - Abdulagatova et al. (2009)",
                                "pT - Abdulagatova et al. (2009)",
                            ),
                            (
                                "pT - Ramazanova & Emirov (2010)",
                                "pT - Ramazanova & Emirov (2010)",
                            ),
                            (
                                "pT - Ramazanova & Emirov (2012)",
                                "pT - Ramazanova & Emirov (2012)",
                            ),
                            ("pT - Emirov et al. (2017)", "pT - Emirov et al. (2017)"),
                            (
                                "Site-specific experimental relationships",
                                "Site-specific experimental relationships",
                            ),
                            ("Other", "Other (specify in comments)"),
                            ("Unspecified", "Unspecified"),
                        ],
                        help_text="Technique or approach used to correct the measured thermal conductivity towards in-situ pressure (p) and/or temperature (T)  conditions.",
                        max_length=255,
                        null=True,
                        verbose_name="Thermal conductivity pT assumed function",
                    ),
                ),
                (
                    "tc_strategy",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Random or periodic depth sampling (number)",
                                "Random or periodic depth sampling (number)",
                            ),
                            (
                                "Characterize formation conductivities",
                                "Characterize formation conductivities",
                            ),
                            ("Well log interpretation", "Well log interpretation"),
                            (
                                "Computation from probe sensing",
                                "Computation from probe sensing",
                            ),
                            ("Other", "Other"),
                            ("unspecified", "Unspecified"),
                        ],
                        help_text="Strategy that was employed to estimate the thermal conductivity over the vertical interval of heat-flow determination.",
                        max_length=255,
                        null=True,
                        verbose_name="Thermal conductivity\xa0averaging methodology",
                    ),
                ),
                (
                    "tc_number",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        help_text="Number of discrete conductivity determinations used to determine the mean thermal conductivity, e.g. number of rock samples with a conductivity value used, or number of thermistors used by probe sensing techniques. Not the repetition of one measurement on one rock sample or one thermistor.",
                        null=True,
                        validators=[django.core.validators.MaxValueValidator(10000)],
                        verbose_name="Thermal conductivity number",
                    ),
                ),
                (
                    "IGSN",
                    django_bleach.models.BleachField(
                        blank=True,
                        help_text="International Generic Sample Numbers (IGSN, semicolon separated) for rock samples used for laboratory measurements of thermal conductivity in the heat flow calculation.",
                        null=True,
                        verbose_name="IGSN",
                    ),
                ),
                (
                    "corr_IS_flag",
                    models.CharField(
                        choices=[
                            ("Considered – p", "Considered –  p"),
                            ("Considered – T", "Considered –  T"),
                            ("Considered – pT", "Considered –  pT"),
                            ("not Considered", "Not considered"),
                            ("unspecified", "Unspecified"),
                        ],
                        default="unspecified",
                        help_text="Specifies whether the in-situ pressure and temperature conditions were considered to the reported thermal conductivity value or not.",
                        max_length=15,
                        verbose_name="Flag in-situ thermal properties",
                    ),
                ),
                (
                    "corr_T_flag",
                    models.CharField(
                        choices=[
                            ("Tilt corrected", "Tilt corrected"),
                            ("Drift corrected", "Drift corrected"),
                            ("not corrected", "Not corrected"),
                            ("Corrected (specify)", "Corrected (specify)"),
                            ("unspecified", "Unspecified"),
                        ],
                        default="unspecified",
                        help_text="Specifies whether the in-situ pressure and temperature conditions were considered to the reported thermal conductivity value or not.",
                        max_length=19,
                        verbose_name="Flag in-situ thermal properties",
                    ),
                ),
                (
                    "corr_S_flag",
                    models.CharField(
                        choices=[
                            ("Present and corrected", "Present and corrected"),
                            ("Present and not corrected", "Present and not corrected"),
                            ("Present not significant", "Present not significant"),
                            ("not recognized", "Not recognized"),
                            ("unspecified", "Unspecified"),
                        ],
                        default="unspecified",
                        help_text="Specifies if sedimentation/subsidence effects with respect to the reported heat-flow value were present and if corrections were performed.",
                        max_length=25,
                        verbose_name="Flag sedimentation effect (temperature/heat flow correction)",
                    ),
                ),
                (
                    "corr_E_flag",
                    models.CharField(
                        choices=[
                            ("Present and corrected", "Present and corrected"),
                            ("Present and not corrected", "Present and not corrected"),
                            ("Present not significant", "Present not significant"),
                            ("not recognized", "Not recognized"),
                            ("unspecified", "Unspecified"),
                        ],
                        default="unspecified",
                        help_text="Specifies if erosion effects with respect to the reported heat-flow value\xa0were present and if corrections were performed.",
                        max_length=25,
                        verbose_name="Flag erosion effect (heat-flow correction)",
                    ),
                ),
                (
                    "corr_TOPO_flag",
                    models.CharField(
                        choices=[
                            ("Present and corrected", "Present and corrected"),
                            ("Present and not corrected", "Present and not corrected"),
                            ("Present not significant", "Present not significant"),
                            ("not recognized", "Not recognized"),
                            ("unspecified", "Unspecified"),
                        ],
                        default="unspecified",
                        help_text="Specifies if topographic effects with respect to the reported heat-flow value\xa0were present and if corrections were performed.",
                        max_length=25,
                        verbose_name="Flag topographic effect (heat-flow correction)",
                    ),
                ),
                (
                    "corr_PAL_flag",
                    models.CharField(
                        choices=[
                            ("Present and corrected", "Present and corrected"),
                            ("Present and not corrected", "Present and not corrected"),
                            ("Present not significant", "Present not significant"),
                            ("not recognized", "Not recognized"),
                            ("unspecified", "Unspecified"),
                        ],
                        default="unspecified",
                        help_text="Specifies if topographic effects with respect to the reported heat-flow value\xa0were present and if corrections were performed.",
                        max_length=25,
                        verbose_name="Flag paleoclimatic effect (heat-flow correction)",
                    ),
                ),
                (
                    "corr_SUR_flag",
                    models.CharField(
                        choices=[
                            ("Present and corrected", "Present and corrected"),
                            ("Present and not corrected", "Present and not corrected"),
                            ("Present not significant", "Present not significant"),
                            ("not recognized", "Not recognized"),
                            ("unspecified", "Unspecified"),
                        ],
                        default="unspecified",
                        help_text="Specifies if climatic conditions (glaciation, post-industrial warming, etc.) with respect to the reported heat-flow value\xa0were present and if corrections were performed.",
                        max_length=25,
                        verbose_name="Flag in-situ thermal properties",
                    ),
                ),
                (
                    "corr_CONV_flag",
                    models.CharField(
                        choices=[
                            ("Present and corrected", "Present and corrected"),
                            ("Present and not corrected", "Present and not corrected"),
                            ("Present not significant", "Present not significant"),
                            ("not recognized", "Not recognized"),
                            ("unspecified", "Unspecified"),
                        ],
                        default="unspecified",
                        help_text="Specifies if convection effects with respect to the reported heat-flow value were present and if corrections were performed.",
                        max_length=25,
                        verbose_name="Flag convection processes (heat-flow correction)\xa0",
                    ),
                ),
                (
                    "corr_HR_flag",
                    models.CharField(
                        choices=[
                            ("Present and corrected", "Present and corrected"),
                            ("Present and not corrected", "Present and not corrected"),
                            ("Present not significant", "Present not significant"),
                            ("not recognized", "Not recognized"),
                            ("unspecified", "Unspecified"),
                        ],
                        default="unspecified",
                        help_text="Specifies if refraction effects, e.g., due to significant local conductivity contrasts, with respect to the reported heat-flow value were present and if corrections were performed. ",
                        max_length=25,
                        verbose_name="Flag heat refraction effect (heat-flow correction)\xa0",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        help_text="parent heat flow site",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="heat_flow.heatflow",
                        verbose_name="parent",
                    ),
                ),
            ],
            options={
                "verbose_name": "Heat Flow (Child)",
                "verbose_name_plural": "Heat Flow (Children)",
                "ordering": ["relevant_child", "q_top"],
            },
            bases=(meta.models.ModelMeta, models.Model),
        ),
    ]
