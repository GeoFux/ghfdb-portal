# Generated by Django 3.2.15 on 2022-09-27 16:05

import database.fields
from django.db import migrations, models
import django.db.models.deletion
import earth_science.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('database', '0001_initial'),
        ('publications', '0001_initial'),
        ('earth_science', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='site',
            name='references',
            field=models.ManyToManyField(blank=True, help_text='The reference or publication from which the data were sourced. Each site may have multiple references.', related_name='sites', to='publications.Publication', verbose_name='references'),
        ),
        migrations.AddField(
            model_name='interval',
            name='T_corr_bot',
            field=database.fields.ChoicesOneToOne(blank=True, help_text='Approach used at the bottom of the heat flow interval to correct the measured temperature for drilling perturbations.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='database.choice', verbose_name='correction method (bottom)'),
        ),
        migrations.AddField(
            model_name='interval',
            name='T_corr_top',
            field=database.fields.ChoicesOneToOne(blank=True, help_text='Approach used at the top of the heat flow interval to correct the measured temperature for drilling perturbations.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='database.choice', verbose_name='correction method (top)'),
        ),
        migrations.AddField(
            model_name='interval',
            name='T_method_bot',
            field=database.fields.ChoicesOneToOne(blank=True, help_text='Method used to determine temperature at the bottom of the heat flow interval.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='database.choice', verbose_name='temperature method (bottom)'),
        ),
        migrations.AddField(
            model_name='interval',
            name='T_method_top',
            field=database.fields.ChoicesOneToOne(blank=True, help_text='Method used to determine temperature at the top of the heat flow interval.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='database.choice', verbose_name='temperature method (top)'),
        ),
        migrations.AddField(
            model_name='interval',
            name='corrections',
            field=database.fields.ChoicesManyToMany(blank=True, related_name='_database_interval_corrections_+', to='database.Choice', verbose_name='Applied Corrections'),
        ),
        migrations.AddField(
            model_name='interval',
            name='geo_lith',
            field=earth_science.fields.EarthMaterialOneToOne(blank=True, help_text='Dominant rock type/lithology within the interval of heat-flow determination using the British Geological Society Earth Material Class (rock classification) scheme.', limit_choices_to=earth_science.fields.limit_choices_to, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='intervals', to='earth_science.earthmaterial', verbose_name='lithology'),
        ),
        migrations.AddField(
            model_name='interval',
            name='geo_strat',
            field=earth_science.fields.GeologicTimeOneToOne(blank=True, help_text='Stratigraphic age of the depth range involved in the reported heat-flow determination based on the official geologic timescale of the International Commission on Stratigraphy.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='intervals', to='earth_science.geologictime', verbose_name='ICS stratigraphy'),
        ),
        migrations.AddField(
            model_name='interval',
            name='hf_probe',
            field=database.fields.ChoicesOneToOne(blank=True, help_text='Type of marine probe used for measurement.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='database.choice', verbose_name='probe type'),
        ),
        migrations.AddField(
            model_name='interval',
            name='q_method',
            field=database.fields.ChoicesOneToOne(blank=True, help_text='Principal method of heat-flow density calculation from temperature and thermal conductivity data', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='database.choice', verbose_name='method'),
        ),
        migrations.AddField(
            model_name='interval',
            name='q_tf_mech',
            field=database.fields.ChoicesOneToOne(blank=True, help_text='Specification of the predominant heat transfer mechanism relevant to the reported heat flow value.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='database.choice', verbose_name='transfer mechanism'),
        ),
        migrations.AddField(
            model_name='interval',
            name='reference',
            field=models.ForeignKey(help_text='The publication or other reference from which the measurement was reported.', on_delete=django.db.models.deletion.CASCADE, related_name='intervals', to='publications.publication', verbose_name='reference'),
        ),
        migrations.AddField(
            model_name='interval',
            name='site',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='intervals', to='database.site', verbose_name='site'),
        ),
        migrations.AddField(
            model_name='interval',
            name='tc_pTcond',
            field=database.fields.ChoicesOneToOne(blank=True, help_text='Pressure and temperature conditions under which the mean thermal conductivity for the given interval was determined. "Recorded" - determined under true conditions at target depths (e.g. sensing in boreholes), "Replicated" - determined in a laboratory under replicated in-situ conditions, "Actual" - under conditions at the respective depth of the heat-flow interval', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='database.choice', verbose_name='pT conditions'),
        ),
        migrations.AddField(
            model_name='interval',
            name='tc_source',
            field=database.fields.ChoicesOneToOne(blank=True, help_text='Nature of the samples from which the mean thermal conductivity was determined', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='database.choice', verbose_name='source'),
        ),
        migrations.AlterUniqueTogether(
            name='choice',
            unique_together={('code', 'path')},
        ),
        migrations.AlterUniqueTogether(
            name='site',
            unique_together={('name', 'lat', 'lng')},
        ),
    ]
