# Generated by Django 3.2.12 on 2022-03-08 02:32

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('thermoglobe', '0002_auto_20220308_1225'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='site',
            options={'ordering': ['-date_added']},
        ),
        migrations.AlterField(
            model_name='conductivity',
            name='comment',
            field=models.TextField(blank=True, help_text='Additional information', null=True, verbose_name='comment'),
        ),
        migrations.AlterField(
            model_name='conductivity',
            name='formation',
            field=models.CharField(blank=True, help_text='Geological formation', max_length=200, verbose_name='formation'),
        ),
        migrations.AlterField(
            model_name='conductivity',
            name='log_id',
            field=models.CharField(blank=True, help_text='Original source Log ID', max_length=64, null=True, verbose_name='log ID'),
        ),
        migrations.AlterField(
            model_name='conductivity',
            name='source',
            field=models.CharField(blank=True, help_text='Where the data came from', max_length=50, null=True, verbose_name='original source'),
        ),
        migrations.AlterField(
            model_name='conductivity',
            name='year_logged',
            field=models.PositiveIntegerField(blank=True, help_text='Year logged', null=True, validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2050)], verbose_name='year'),
        ),
        migrations.AlterField(
            model_name='heatproduction',
            name='comment',
            field=models.TextField(blank=True, help_text='Additional information', null=True, verbose_name='comment'),
        ),
        migrations.AlterField(
            model_name='heatproduction',
            name='formation',
            field=models.CharField(blank=True, help_text='Geological formation', max_length=200, verbose_name='formation'),
        ),
        migrations.AlterField(
            model_name='heatproduction',
            name='log_id',
            field=models.CharField(blank=True, help_text='Original source Log ID', max_length=64, null=True, verbose_name='log ID'),
        ),
        migrations.AlterField(
            model_name='heatproduction',
            name='source',
            field=models.CharField(blank=True, help_text='Where the data came from', max_length=50, null=True, verbose_name='original source'),
        ),
        migrations.AlterField(
            model_name='heatproduction',
            name='year_logged',
            field=models.PositiveIntegerField(blank=True, help_text='Year logged', null=True, validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2050)], verbose_name='year'),
        ),
        migrations.AlterField(
            model_name='historicalsite',
            name='latitude',
            field=models.FloatField(db_index=True, help_text='Latitude in decimal degrees', validators=[django.core.validators.MaxValueValidator(90), django.core.validators.MinValueValidator(-90)], verbose_name='latitude'),
        ),
        migrations.AlterField(
            model_name='historicalsite',
            name='longitude',
            field=models.FloatField(db_index=True, help_text='Longitude in decimal degrees', validators=[django.core.validators.MaxValueValidator(180), django.core.validators.MinValueValidator(-180)], verbose_name='longitude'),
        ),
        migrations.AlterField(
            model_name='site',
            name='latitude',
            field=models.FloatField(db_index=True, help_text='Latitude in decimal degrees', validators=[django.core.validators.MaxValueValidator(90), django.core.validators.MinValueValidator(-90)], verbose_name='latitude'),
        ),
        migrations.AlterField(
            model_name='site',
            name='longitude',
            field=models.FloatField(db_index=True, help_text='Longitude in decimal degrees', validators=[django.core.validators.MaxValueValidator(180), django.core.validators.MinValueValidator(-180)], verbose_name='longitude'),
        ),
        migrations.AlterField(
            model_name='temperature',
            name='comment',
            field=models.TextField(blank=True, help_text='Additional information', null=True, verbose_name='comment'),
        ),
        migrations.AlterField(
            model_name='temperature',
            name='depth',
            field=models.FloatField(default=0, verbose_name='depth (m)'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='temperature',
            name='formation',
            field=models.CharField(blank=True, help_text='Geological formation', max_length=200, verbose_name='formation'),
        ),
        migrations.AlterField(
            model_name='temperature',
            name='log_id',
            field=models.CharField(blank=True, help_text='Original source Log ID', max_length=64, null=True, verbose_name='log ID'),
        ),
        migrations.AlterField(
            model_name='temperature',
            name='source',
            field=models.CharField(blank=True, help_text='Where the data came from', max_length=50, null=True, verbose_name='original source'),
        ),
        migrations.AlterField(
            model_name='temperature',
            name='temperature',
            field=models.FloatField(verbose_name='temperature (C)'),
        ),
        migrations.AlterField(
            model_name='temperature',
            name='uncertainty',
            field=models.FloatField(blank=True, null=True, verbose_name='uncertainty'),
        ),
        migrations.AlterField(
            model_name='temperature',
            name='year_logged',
            field=models.PositiveIntegerField(blank=True, help_text='Year logged', null=True, validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2050)], verbose_name='year'),
        ),
        migrations.AlterField(
            model_name='tempmeta',
            name='circ_time',
            field=models.FloatField(blank=True, help_text='Circulation time (hrs)', null=True, verbose_name='circulation time'),
        ),
        migrations.AlterField(
            model_name='tempmeta',
            name='comment',
            field=models.TextField(blank=True, help_text='Additional information', null=True, verbose_name='comment'),
        ),
        migrations.AlterField(
            model_name='tempmeta',
            name='correction',
            field=models.CharField(blank=True, help_text='Correction type', max_length=150, null=True, verbose_name='correction'),
        ),
        migrations.AlterField(
            model_name='tempmeta',
            name='formation',
            field=models.CharField(blank=True, help_text='Geological formation', max_length=200, verbose_name='formation'),
        ),
        migrations.AlterField(
            model_name='tempmeta',
            name='lag_time',
            field=models.FloatField(blank=True, help_text='Lag time (hrs)', null=True, verbose_name='lag time'),
        ),
        migrations.AlterField(
            model_name='tempmeta',
            name='log_id',
            field=models.CharField(blank=True, help_text='Original source Log ID', max_length=64, null=True, verbose_name='log ID'),
        ),
        migrations.AlterField(
            model_name='tempmeta',
            name='method',
            field=models.CharField(blank=True, help_text='Temperature method', max_length=200, verbose_name='method'),
        ),
        migrations.AlterField(
            model_name='tempmeta',
            name='source',
            field=models.CharField(blank=True, help_text='Where the data came from', max_length=50, null=True, verbose_name='original source'),
        ),
        migrations.AlterField(
            model_name='tempmeta',
            name='year_logged',
            field=models.PositiveIntegerField(blank=True, help_text='Year logged', null=True, validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2050)], verbose_name='year'),
        ),
    ]
