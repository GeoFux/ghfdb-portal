# Generated by Django 2.2.1 on 2019-10-16 05:40

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.expressions
import django_extensions.db.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('geomodels', '0001_initial'),
        ('reference', '0012_remove_reference_source'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DepthInterval',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('uploaded_by', models.CharField(blank=True, max_length=150, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.CharField(blank=True, max_length=150, null=True)),
                ('date_edited', models.DateTimeField(auto_now=True)),
                ('age_min', models.FloatField(blank=True, null=True)),
                ('age_max', models.FloatField(blank=True, null=True)),
                ('age_method', models.CharField(blank=True, max_length=200)),
                ('depth_min', models.FloatField(blank=True, null=True)),
                ('depth_max', models.FloatField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('edited_by', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('lithology', models.ManyToManyField(blank=True, to='geomodels.Lithology')),
                ('reference', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reference.Reference')),
            ],
            options={
                'db_table': 'depth_interval',
                'ordering': [django.db.models.expressions.OrderBy(django.db.models.expressions.F('depth_min'), descending=True, nulls_last=True)],
            },
        ),
        migrations.CreateModel(
            name='HeatFlowCorrection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('correction', models.CharField(max_length=200)),
                ('value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'heat_flow_correction',
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('site_name', models.CharField(max_length=200)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, srid=4326)),
                ('elevation', models.FloatField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('uploaded_by', models.CharField(blank=True, max_length=150, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.CharField(blank=True, max_length=150, null=True)),
                ('date_edited', models.DateTimeField(auto_now=True)),
                ('well_depth', models.FloatField(blank=True, null=True)),
                ('dip', models.FloatField(blank=True, null=True)),
                ('operator', models.CharField(blank=True, max_length=150, null=True)),
                ('cruise', models.CharField(blank=True, max_length=150, null=True)),
                ('sediment_thickness', models.FloatField(blank=True, null=True)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from=['site_name', 'latitude', 'longitude'])),
                ('basin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='basin_name', to='geomodels.Basin')),
            ],
            options={
                'db_table': 'site',
                'ordering': [django.db.models.expressions.OrderBy(django.db.models.expressions.F('site_name'), descending=True, nulls_last=True)],
            },
        ),
        migrations.CreateModel(
            name='TemperatureGradient',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('uploaded_by', models.CharField(blank=True, max_length=150, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.CharField(blank=True, max_length=150, null=True)),
                ('date_edited', models.DateTimeField(auto_now=True)),
                ('corrected', models.FloatField(blank=True, null=True)),
                ('corrected_uncertainty', models.FloatField(blank=True, null=True)),
                ('uncorrected', models.FloatField(blank=True, null=True)),
                ('uncorrected_uncertainty', models.FloatField(blank=True, null=True)),
                ('depth_interval', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='thermoglobe.DepthInterval')),
                ('edited_by', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='thermoglobe.Site')),
            ],
            options={
                'db_table': 'temperature_gradient',
            },
        ),
        migrations.CreateModel(
            name='Temperature',
            fields=[
                ('rock_group', models.CharField(blank=True, choices=[('metamorphic', 'Metamorphic'), ('igneous', 'Igneous'), ('sedimentary', 'Sedimentary'), ('metaigneous', 'Meta-Igneous'), ('metasedimentary', 'Meta-Sedimentary')], max_length=15)),
                ('rock_origin', models.CharField(blank=True, choices=[('plutonic', 'Plutonic'), ('volcanic', 'Volcanic')], max_length=8)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('uploaded_by', models.CharField(blank=True, max_length=150, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.CharField(blank=True, max_length=150, null=True)),
                ('date_edited', models.DateTimeField(auto_now=True)),
                ('age_min', models.FloatField(blank=True, null=True)),
                ('age_max', models.FloatField(blank=True, null=True)),
                ('age_method', models.CharField(blank=True, max_length=200)),
                ('sample_name', models.CharField(blank=True, max_length=200)),
                ('value', models.FloatField()),
                ('uncertainty', models.FloatField(blank=True, null=True)),
                ('method', models.CharField(blank=True, max_length=200)),
                ('number_of_measurements', models.IntegerField(default=1)),
                ('depth', models.FloatField(blank=True, null=True)),
                ('lag_time', models.FloatField(blank=True, null=True)),
                ('is_top_of_hole', models.BooleanField(default=False)),
                ('is_bottom_of_hole', models.BooleanField(default=False)),
                ('description', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='geomodels.Description')),
                ('edited_by', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('lithology', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='geomodels.Lithology')),
                ('reference', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reference.Reference')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='thermoglobe.Site')),
            ],
            options={
                'verbose_name_plural': 'temperature',
                'db_table': 'temperature',
                'unique_together': {('value', 'depth', 'site')},
            },
        ),
        migrations.AddField(
            model_name='site',
            name='bottom_hole_temp',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bottom_hole_temp', to='thermoglobe.Temperature'),
        ),
        migrations.AddField(
            model_name='site',
            name='domain',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='geomodels.Domain'),
        ),
        migrations.AddField(
            model_name='site',
            name='edited_by',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='site',
            name='province',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='geomodels.Province'),
        ),
        migrations.AddField(
            model_name='site',
            name='reference',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reference.Reference'),
        ),
        migrations.AddField(
            model_name='site',
            name='sub_basin',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sub_basin_name', to='geomodels.Basin'),
        ),
        migrations.AddField(
            model_name='site',
            name='tectonic_environment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='geomodels.TectonicEnvironment'),
        ),
        migrations.AddField(
            model_name='site',
            name='top_hole_temp',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='top_hole_temp', to='thermoglobe.Temperature'),
        ),
        migrations.CreateModel(
            name='HeatFlow',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('uploaded_by', models.CharField(blank=True, max_length=150, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.CharField(blank=True, max_length=150, null=True)),
                ('date_edited', models.DateTimeField(auto_now=True)),
                ('corrected', models.FloatField(blank=True, null=True)),
                ('corrected_uncertainty', models.FloatField(blank=True, null=True)),
                ('uncorrected', models.FloatField(blank=True, null=True)),
                ('uncorrected_uncertainty', models.FloatField(blank=True, null=True)),
                ('reliability', models.CharField(blank=True, choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('R', 'R'), ('Z', 'Z')], max_length=1, null=True)),
                ('corrections', models.ManyToManyField(blank=True, to='thermoglobe.HeatFlowCorrection')),
                ('depth_interval', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='thermoglobe.DepthInterval')),
                ('edited_by', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='thermoglobe.Site')),
            ],
            options={
                'verbose_name_plural': 'heat flow',
                'db_table': 'heat_flow',
            },
        ),
        migrations.AddField(
            model_name='depthinterval',
            name='site',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='thermoglobe.Site'),
        ),
        migrations.AlterUniqueTogether(
            name='site',
            unique_together={('site_name', 'latitude', 'longitude', 'reference')},
        ),
        migrations.CreateModel(
            name='HeatGeneration',
            fields=[
                ('rock_group', models.CharField(blank=True, choices=[('metamorphic', 'Metamorphic'), ('igneous', 'Igneous'), ('sedimentary', 'Sedimentary'), ('metaigneous', 'Meta-Igneous'), ('metasedimentary', 'Meta-Sedimentary')], max_length=15)),
                ('rock_origin', models.CharField(blank=True, choices=[('plutonic', 'Plutonic'), ('volcanic', 'Volcanic')], max_length=8)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('uploaded_by', models.CharField(blank=True, max_length=150, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.CharField(blank=True, max_length=150, null=True)),
                ('date_edited', models.DateTimeField(auto_now=True)),
                ('age_min', models.FloatField(blank=True, null=True)),
                ('age_max', models.FloatField(blank=True, null=True)),
                ('age_method', models.CharField(blank=True, max_length=200)),
                ('sample_name', models.CharField(blank=True, max_length=200)),
                ('value', models.FloatField()),
                ('uncertainty', models.FloatField(blank=True, null=True)),
                ('method', models.CharField(blank=True, max_length=200)),
                ('number_of_measurements', models.IntegerField(default=1)),
                ('depth', models.FloatField(blank=True, null=True)),
                ('depth_interval', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='thermoglobe.DepthInterval')),
                ('description', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='geomodels.Description')),
                ('edited_by', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('lithology', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='geomodels.Lithology')),
                ('reference', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reference.Reference')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='thermoglobe.Site')),
            ],
            options={
                'verbose_name_plural': 'heat generation',
                'db_table': 'heat_generation',
                'unique_together': {('value', 'depth', 'site')},
            },
        ),
        migrations.CreateModel(
            name='Conductivity',
            fields=[
                ('rock_group', models.CharField(blank=True, choices=[('metamorphic', 'Metamorphic'), ('igneous', 'Igneous'), ('sedimentary', 'Sedimentary'), ('metaigneous', 'Meta-Igneous'), ('metasedimentary', 'Meta-Sedimentary')], max_length=15)),
                ('rock_origin', models.CharField(blank=True, choices=[('plutonic', 'Plutonic'), ('volcanic', 'Volcanic')], max_length=8)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('uploaded_by', models.CharField(blank=True, max_length=150, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.CharField(blank=True, max_length=150, null=True)),
                ('date_edited', models.DateTimeField(auto_now=True)),
                ('age_min', models.FloatField(blank=True, null=True)),
                ('age_max', models.FloatField(blank=True, null=True)),
                ('age_method', models.CharField(blank=True, max_length=200)),
                ('sample_name', models.CharField(blank=True, max_length=200)),
                ('value', models.FloatField()),
                ('uncertainty', models.FloatField(blank=True, null=True)),
                ('method', models.CharField(blank=True, max_length=200)),
                ('number_of_measurements', models.IntegerField(default=1)),
                ('depth', models.FloatField(blank=True, null=True)),
                ('depth_interval', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='thermoglobe.DepthInterval')),
                ('description', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='geomodels.Description')),
                ('edited_by', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('lithology', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='geomodels.Lithology')),
                ('reference', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reference.Reference')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='thermoglobe.Site')),
            ],
            options={
                'verbose_name_plural': 'conductivity',
                'db_table': 'thermal_conductivity',
                'unique_together': {('value', 'depth', 'site')},
            },
        ),
    ]
