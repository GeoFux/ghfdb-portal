# Generated by Django 3.0.4 on 2020-03-31 00:37

import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django_extensions.db.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Conductivity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('uploaded_by', models.CharField(blank=True, max_length=150, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.CharField(blank=True, max_length=150, null=True)),
                ('date_edited', models.DateTimeField(auto_now=True)),
                ('comment', models.TextField(blank=True, null=True, verbose_name='comment')),
                ('source', models.CharField(blank=True, max_length=50, null=True)),
                ('sample_name', models.CharField(blank=True, max_length=200, verbose_name='sample name')),
                ('value', models.FloatField(verbose_name='value')),
                ('uncertainty', models.FloatField(blank=True, null=True, verbose_name='uncertainty')),
                ('method', models.CharField(blank=True, max_length=200, verbose_name='method')),
                ('depth', models.FloatField(blank=True, null=True, verbose_name='depth')),
                ('rock_group', models.CharField(blank=True, choices=[('M', 'Metamorphic'), ('I', 'Igneous'), ('S', 'Sedimentary'), ('MI', 'Meta-Igneous'), ('MS', 'Meta-Sedimentary')], max_length=2, null=True, verbose_name='rock group')),
                ('rock_origin', models.CharField(blank=True, choices=[('P', 'Plutonic'), ('V', 'Volcanic')], max_length=2, null=True, verbose_name='rock origin')),
                ('rock_type', models.CharField(blank=True, max_length=100, null=True, verbose_name='rock type')),
                ('age', models.FloatField(blank=True, null=True, verbose_name='age')),
                ('age_min', models.FloatField(blank=True, null=True, verbose_name='minimum age')),
                ('age_max', models.FloatField(blank=True, null=True, verbose_name='maximum age')),
                ('age_method', models.CharField(blank=True, max_length=200, null=True, verbose_name='age method')),
                ('is_core', models.BooleanField(default=False, verbose_name='is drill core')),
            ],
            options={
                'verbose_name_plural': 'conductivity',
                'db_table': 'thermal_conductivity',
            },
        ),
        migrations.CreateModel(
            name='Correction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_climatic', models.BooleanField(default=False)),
                ('climatic', models.FloatField(blank=True, null=True)),
                ('has_topographic', models.BooleanField(default=False)),
                ('topographic', models.FloatField(blank=True, null=True)),
                ('has_refraction', models.BooleanField(default=False)),
                ('refraction', models.FloatField(blank=True, null=True)),
                ('has_sedimentation', models.BooleanField(default=False)),
                ('sedimentation', models.FloatField(blank=True, null=True)),
                ('has_fluid', models.BooleanField(default=False)),
                ('fluid', models.FloatField(blank=True, null=True)),
                ('has_bottom_water_variation', models.BooleanField(default=False)),
                ('bottom_water_variation', models.FloatField(blank=True, null=True)),
                ('has_compaction', models.BooleanField(default=False)),
                ('compaction', models.FloatField(blank=True, null=True)),
                ('has_other', models.BooleanField(default=False)),
                ('other_type', models.CharField(blank=True, max_length=100, null=True)),
                ('other', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'correction',
            },
        ),
        migrations.CreateModel(
            name='HeatFlow',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('uploaded_by', models.CharField(blank=True, max_length=150, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.CharField(blank=True, max_length=150, null=True)),
                ('date_edited', models.DateTimeField(auto_now=True)),
                ('comment', models.TextField(blank=True, null=True, verbose_name='comment')),
                ('source', models.CharField(blank=True, max_length=50, null=True)),
                ('depth_min', models.FloatField(blank=True, null=True, verbose_name='minimum depth')),
                ('depth_max', models.FloatField(blank=True, null=True, verbose_name='maximum depth')),
                ('corrected', models.FloatField(blank=True, null=True, verbose_name='corrected value')),
                ('corrected_uncertainty', models.FloatField(blank=True, null=True, verbose_name='corrected uncertainty')),
                ('uncorrected', models.FloatField(blank=True, null=True, verbose_name='uncorrected value')),
                ('uncorrected_uncertainty', models.FloatField(blank=True, null=True, verbose_name='uncorrected uncertainty')),
                ('number_of_temperatures', models.IntegerField(blank=True, null=True, verbose_name='number of temperatures')),
                ('reliability', models.CharField(blank=True, choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('R', 'R'), ('Z', 'Z')], max_length=1, null=True, verbose_name='heat flow reliability')),
                ('conductivity', models.FloatField(blank=True, null=True, verbose_name='thermal conductivity')),
                ('conductivity_uncertainty', models.FloatField(blank=True, null=True, verbose_name='thermal conductivity uncertainty')),
                ('number_of_conductivities', models.FloatField(blank=True, null=True, verbose_name='number of conductivity measurements')),
                ('conductivity_method', models.CharField(blank=True, max_length=150, null=True, verbose_name='thermal conductivity method')),
            ],
            options={
                'verbose_name_plural': 'heat flow',
                'db_table': 'heat_flow',
            },
        ),
        migrations.CreateModel(
            name='HeatGeneration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('uploaded_by', models.CharField(blank=True, max_length=150, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.CharField(blank=True, max_length=150, null=True)),
                ('date_edited', models.DateTimeField(auto_now=True)),
                ('comment', models.TextField(blank=True, null=True, verbose_name='comment')),
                ('source', models.CharField(blank=True, max_length=50, null=True)),
                ('sample_name', models.CharField(blank=True, max_length=200, verbose_name='sample name')),
                ('value', models.FloatField(verbose_name='value')),
                ('uncertainty', models.FloatField(blank=True, null=True, verbose_name='uncertainty')),
                ('method', models.CharField(blank=True, max_length=200, verbose_name='method')),
                ('depth', models.FloatField(blank=True, null=True, verbose_name='depth')),
                ('rock_group', models.CharField(blank=True, choices=[('M', 'Metamorphic'), ('I', 'Igneous'), ('S', 'Sedimentary'), ('MI', 'Meta-Igneous'), ('MS', 'Meta-Sedimentary')], max_length=2, null=True, verbose_name='rock group')),
                ('rock_origin', models.CharField(blank=True, choices=[('P', 'Plutonic'), ('V', 'Volcanic')], max_length=2, null=True, verbose_name='rock origin')),
                ('rock_type', models.CharField(blank=True, max_length=100, null=True, verbose_name='rock type')),
                ('age', models.FloatField(blank=True, null=True, verbose_name='age')),
                ('age_min', models.FloatField(blank=True, null=True, verbose_name='minimum age')),
                ('age_max', models.FloatField(blank=True, null=True, verbose_name='maximum age')),
                ('age_method', models.CharField(blank=True, max_length=200, null=True, verbose_name='age method')),
                ('is_core', models.BooleanField(default=False, verbose_name='is drill core')),
            ],
            options={
                'verbose_name_plural': 'heat generation',
                'db_table': 'heat_generation',
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('site_name', models.CharField(max_length=200)),
                ('latitude', models.DecimalField(decimal_places=5, max_digits=7, validators=[django.core.validators.MaxValueValidator(90), django.core.validators.MinValueValidator(-90)])),
                ('longitude', models.DecimalField(decimal_places=5, max_digits=8, validators=[django.core.validators.MaxValueValidator(180), django.core.validators.MinValueValidator(-180)])),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, srid=4326)),
                ('elevation', models.FloatField(blank=True, null=True)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from=['site_name', 'latitude', 'longitude'])),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('uploaded_by', models.CharField(blank=True, max_length=150, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.CharField(blank=True, max_length=150, null=True)),
                ('date_edited', models.DateTimeField(auto_now=True)),
                ('age_min', models.FloatField(blank=True, null=True, verbose_name='minimum age')),
                ('age_max', models.FloatField(blank=True, null=True, verbose_name='maximum age')),
                ('age_method', models.CharField(blank=True, max_length=200, null=True, verbose_name='age method')),
                ('tectonothermal_min', models.CharField(blank=True, max_length=150, null=True, verbose_name='minimum thermo-tectonic age')),
                ('tectonothermal_max', models.CharField(blank=True, max_length=150, null=True, verbose_name='maximum thermo-tectonic age')),
                ('juvenile_age_min', models.CharField(blank=True, max_length=150, null=True, verbose_name='minimum juvenile age')),
                ('juvenile_age_max', models.CharField(blank=True, max_length=150, null=True, verbose_name='minimum juvenile age')),
                ('site_type', models.CharField(blank=True, choices=[('W', 'Well'), ('O', 'Outcrop'), ('S', 'Sea Floor'), ('L', 'Lake Bottom')], max_length=1, null=True, verbose_name='site type')),
                ('cruise', models.CharField(blank=True, max_length=150, null=True, verbose_name='name of cruise')),
                ('seamount_distance', models.FloatField(blank=True, null=True, verbose_name='distance to seamount')),
                ('outcrop_distance', models.FloatField(blank=True, null=True, verbose_name='distance to outcrop')),
                ('ruggedness', models.IntegerField(blank=True, null=True, verbose_name='ruggedness')),
                ('sediment_thickness', models.FloatField(blank=True, null=True, verbose_name='calculated sediment thickness')),
                ('crustal_thickness', models.FloatField(blank=True, null=True, verbose_name='calculated crustal thickness')),
                ('well_depth', models.FloatField(blank=True, null=True, verbose_name='well depth')),
                ('dip', models.FloatField(blank=True, null=True, verbose_name='well dip')),
                ('lithology', models.CharField(blank=True, help_text='The general lithology of the site.', max_length=150, null=True, verbose_name='lithology')),
                ('EOH_rock_type', models.CharField(blank=True, help_text='The rock type at the bottom of the hole.', max_length=150, null=True, verbose_name='EOH rock type')),
                ('site_status', models.CharField(blank=True, help_text='Last known status of the well.', max_length=150, null=True, verbose_name='site status')),
                ('USGS_code', models.CharField(blank=True, help_text='USGS stratigraphic code (Legacy).', max_length=15, null=True, verbose_name='USGS stratigraphic code')),
            ],
            options={
                'db_table': 'site',
                'ordering': ['date_added'],
            },
        ),
        migrations.CreateModel(
            name='Temperature',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('uploaded_by', models.CharField(blank=True, max_length=150, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.CharField(blank=True, max_length=150, null=True)),
                ('date_edited', models.DateTimeField(auto_now=True)),
                ('comment', models.TextField(blank=True, null=True, verbose_name='comment')),
                ('source', models.CharField(blank=True, max_length=50, null=True)),
                ('value', models.FloatField()),
                ('depth', models.FloatField(blank=True, null=True)),
                ('method', models.CharField(blank=True, max_length=200)),
                ('lag_time', models.FloatField(blank=True, null=True)),
                ('is_bottom_of_hole', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'temperature',
                'db_table': 'temperature',
            },
        ),
        migrations.CreateModel(
            name='ThermalGradient',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('uploaded_by', models.CharField(blank=True, max_length=150, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.CharField(blank=True, max_length=150, null=True)),
                ('date_edited', models.DateTimeField(auto_now=True)),
                ('comment', models.TextField(blank=True, null=True, verbose_name='comment')),
                ('source', models.CharField(blank=True, max_length=50, null=True)),
                ('depth_min', models.FloatField(blank=True, null=True, verbose_name='minimum depth')),
                ('depth_max', models.FloatField(blank=True, null=True, verbose_name='maximum depth')),
                ('corrected', models.FloatField(blank=True, null=True, verbose_name='corrected value')),
                ('corrected_uncertainty', models.FloatField(blank=True, null=True, verbose_name='corrected uncertainty')),
                ('uncorrected', models.FloatField(blank=True, null=True, verbose_name='uncorrected value')),
                ('uncorrected_uncertainty', models.FloatField(blank=True, null=True, verbose_name='uncorrected uncertainty')),
                ('number_of_temperatures', models.IntegerField(blank=True, null=True, verbose_name='number of temperatures')),
            ],
            options={
                'db_table': 'thermal_gradient',
            },
        ),
    ]
