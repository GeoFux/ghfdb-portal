# Generated by Django 3.2.12 on 2022-03-08 01:55

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('publications', '0007_alter_publication_language'),
        ('thermoglobe', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TempMeta',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('formation', models.CharField(blank=True, help_text='The name of the sampled geological formation.', max_length=200, verbose_name='formation name')),
                ('depth', models.FloatField(blank=True, help_text='The depth at which the measurement was taken (if applicable).', null=True, verbose_name='depth')),
                ('method', models.CharField(blank=True, help_text='The method used to obtain the reported value.', max_length=200, verbose_name='method')),
                ('operator', models.CharField(blank=True, help_text='The operator collecting the measurements', max_length=150, null=True, verbose_name='operator')),
                ('comment', models.TextField(blank=True, help_text='Information supplied with the measurement either by the original author/researcher or the compiler.', null=True, verbose_name='comment')),
                ('source', models.CharField(blank=True, max_length=50, null=True)),
                ('source_id', models.CharField(blank=True, help_text='This is the ID for the measurement used by the original source', max_length=150, null=True, verbose_name='source ID')),
                ('log_id', models.CharField(blank=True, help_text='This is required for multiple logs to be stored on the same site.', max_length=64, null=True, verbose_name='log specific ID')),
                ('year_logged', models.PositiveIntegerField(blank=True, help_text='Year the measurement was made.', null=True, validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2050)], verbose_name='year logged')),
                ('date_added', models.DateTimeField(auto_now_add=True, verbose_name='date added to ThermoGlobe')),
                ('circ_time', models.FloatField(blank=True, help_text='Circulation time in hours.', null=True, verbose_name='circulation time')),
                ('lag_time', models.FloatField(blank=True, help_text='Hours between drilling and measuring temperature.', null=True, verbose_name='lag time')),
                ('correction', models.CharField(blank=True, help_text='Applied temperature correction type.', max_length=150, null=True, verbose_name='correction')),
                ('reference', models.ForeignKey(blank=True, help_text='The publications or other reference from which the measurement was reported.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='temperature', to='publications.publication', verbose_name='reference')),
                ('site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='temperature', to='thermoglobe.site', verbose_name='site')),
            ],
            options={
                'verbose_name': 'temperature metadata',
                'verbose_name_plural': 'temperature metadata',
                'db_table': 'temp_meta',
                'ordering': ['log_id'],
                'unique_together': {('site', 'log_id', 'reference')},
            },
        ),
        migrations.AddField(
            model_name='temperature',
            name='meta',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='thermoglobe.tempmeta', verbose_name='metadata'),
        ),
        migrations.AlterUniqueTogether(
            name='temperature',
            unique_together={('temperature', 'depth', 'meta')},
        ),
        migrations.RemoveField(
            model_name='temperature',
            name='circ_time',
        ),
        migrations.RemoveField(
            model_name='temperature',
            name='correction',
        ),
        migrations.RemoveField(
            model_name='temperature',
            name='lag_time',
        ),
        migrations.RemoveField(
            model_name='temperature',
            name='reference',
        ),
        migrations.RemoveField(
            model_name='temperature',
            name='site',
        ),
    ]
