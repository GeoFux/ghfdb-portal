# Generated by Django 3.0.4 on 2020-03-31 00:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('geomodels', '0003_auto_20200331_1107'),
        ('reference', '0002_auto_20200331_1107'),
        ('thermoglobe', '0001_initial'),
        ('mapping', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='thermalgradient',
            name='edited_by',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='thermalgradient',
            name='heatflow',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='thermoglobe.HeatFlow', verbose_name='heat flow'),
        ),
        migrations.AddField(
            model_name='thermalgradient',
            name='reference',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reference.Reference', verbose_name='reference'),
        ),
        migrations.AddField(
            model_name='thermalgradient',
            name='site',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='thermoglobe.Site', verbose_name='site'),
        ),
        migrations.AddField(
            model_name='temperature',
            name='edited_by',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='temperature',
            name='reference',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reference.Reference', verbose_name='reference'),
        ),
        migrations.AddField(
            model_name='temperature',
            name='site',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='thermoglobe.Site', verbose_name='site'),
        ),
        migrations.AddField(
            model_name='site',
            name='CGG_basin',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sites', to='mapping.Basin', verbose_name='CGG Robertson Basin'),
        ),
        migrations.AddField(
            model_name='site',
            name='EOH_geo_unit',
            field=models.ForeignKey(blank=True, help_text='The geologial unit at the bottom of the hole.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='geomodels.GeologicalUnit', verbose_name='EOH geological unit'),
        ),
        migrations.AddField(
            model_name='site',
            name='basin',
            field=models.ForeignKey(blank=True, help_text='The geological basin in which the site is situated.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='basin', to='geomodels.Basin', verbose_name='geological basin'),
        ),
        migrations.AddField(
            model_name='site',
            name='bottom_hole_temp',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bottom_hole_temp', to='thermoglobe.Temperature', verbose_name='bottom of hole temperature'),
        ),
        migrations.AddField(
            model_name='site',
            name='continent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sites', to='mapping.Continent', verbose_name='continent'),
        ),
        migrations.AddField(
            model_name='site',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sites', to='mapping.Country', verbose_name='country'),
        ),
        migrations.AddField(
            model_name='site',
            name='edited_by',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='site',
            name='geological_province',
            field=models.ForeignKey(blank=True, help_text='The geological province in which the site is situated.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='geomodels.GeologicalProvince', verbose_name='geological province'),
        ),
        migrations.AddField(
            model_name='site',
            name='operator',
            field=models.ForeignKey(blank=True, max_length=150, null=True, on_delete=django.db.models.deletion.SET_NULL, to='reference.Operator', verbose_name='site operator'),
        ),
        migrations.AddField(
            model_name='site',
            name='reference',
            field=models.ManyToManyField(blank=True, related_name='sites', to='reference.Reference', verbose_name='references'),
        ),
        migrations.AddField(
            model_name='site',
            name='sea',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sites', to='mapping.Sea', verbose_name='sea name'),
        ),
        migrations.AddField(
            model_name='site',
            name='sub_basin',
            field=models.ForeignKey(blank=True, help_text='The geological sub-basin in which the site is situated. More specific than basin.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sub_basin', to='geomodels.Basin', verbose_name='geological sub-basin'),
        ),
        migrations.AddField(
            model_name='site',
            name='surface_temp',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='surface_temp', to='thermoglobe.Temperature', verbose_name='surface temperature'),
        ),
        migrations.AddField(
            model_name='site',
            name='tectonic_environment',
            field=models.ForeignKey(blank=True, help_text='The tectonic environment in which the site is situated.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='geomodels.TectonicEnvironment', verbose_name='tectonic environment'),
        ),
        migrations.AddField(
            model_name='heatgeneration',
            name='edited_by',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='heatgeneration',
            name='geo_unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='geomodels.GeologicalUnit', verbose_name='geological unit'),
        ),
        migrations.AddField(
            model_name='heatgeneration',
            name='reference',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reference.Reference', verbose_name='reference'),
        ),
        migrations.AddField(
            model_name='heatgeneration',
            name='site',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='thermoglobe.Site', verbose_name='site'),
        ),
        migrations.AddField(
            model_name='heatflow',
            name='edited_by',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='heatflow',
            name='reference',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reference.Reference', verbose_name='reference'),
        ),
        migrations.AddField(
            model_name='heatflow',
            name='site',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='thermoglobe.Site', verbose_name='site'),
        ),
        migrations.AddField(
            model_name='correction',
            name='gradient',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='thermoglobe.ThermalGradient'),
        ),
        migrations.AddField(
            model_name='correction',
            name='heatflow',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='thermoglobe.HeatFlow'),
        ),
        migrations.AddField(
            model_name='conductivity',
            name='edited_by',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='conductivity',
            name='geo_unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='geomodels.GeologicalUnit', verbose_name='geological unit'),
        ),
        migrations.AddField(
            model_name='conductivity',
            name='reference',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reference.Reference', verbose_name='reference'),
        ),
        migrations.AddField(
            model_name='conductivity',
            name='site',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='thermoglobe.Site', verbose_name='site'),
        ),
        migrations.AlterUniqueTogether(
            name='temperature',
            unique_together={('value', 'depth', 'site', 'reference')},
        ),
        migrations.AlterUniqueTogether(
            name='site',
            unique_together={('site_name', 'latitude', 'longitude')},
        ),
        migrations.AlterUniqueTogether(
            name='heatgeneration',
            unique_together={('value', 'depth', 'site', 'reference')},
        ),
        migrations.AlterUniqueTogether(
            name='conductivity',
            unique_together={('value', 'depth', 'site', 'reference')},
        ),
    ]
