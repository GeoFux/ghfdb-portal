version: '3'
name: ghfdb_production
volumes:
  postgres: {}
  postgres_backups: {}
  traefik: {}
  media: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/geoluminate/production
    image: production_django
    depends_on:
      - postgres
      - redis
      - minio
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    command: /external_apps/geoluminate/bin/production/django
    logging:
      options:
        max-size: "10m"
        max-file: "5"
  postgres:
    build:
      context: .
      dockerfile: ./compose/postgres/Dockerfile
    image: production_postgres
    volumes:
      - postgres:/var/lib/postgresql/data
      - postgres_backups:/backups
    env_file:
      - ./.envs/.production/.postgres
    logging:
      options:
        max-size: "10m"
        max-file: "5"
  redis:
    image: redis:6
    logging:
      options:
        max-size: "10m"
        max-file: "5"
  celeryworker:
    <<: *django
    image: celery_worker
    command: /scripts/production/celery_worker
    logging:
      options:
        max-size: "10m"
        max-file: "5"
  celerybeat:
    <<: *django
    image: celery_beat
    command: /scripts/production/celery_beat
    logging:
      options:
        max-size: "10m"
        max-file: "5"
  flower:
    <<: *django
    image: celery_flower
    command: /scripts/production/celery_flower
    logging:
      options:
        max-size: "10m"
        max-file: "5"
  traefik:
    build:
      context: .
      dockerfile: ./compose/traefik/Dockerfile
    image: traefik
    depends_on:
      - django
    volumes:
      - traefik:/etc/traefik/acme
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
      - "0.0.0.0:5555:5555"
      # - "0.0.0.0:8080:8080"
    logging:
      options:
        max-size: "10m"
        max-file: "5"
